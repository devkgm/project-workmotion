<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.workmotion.app.project.dao.TaskDAO">

    <select id="getTaskList" parameterType="ProjectDTO" resultMap="getResult">
        SELECT
        t.*,
        m.id as member_id,
        m.name as member_name,
        m.role_id AS member_role_id,
        m.company_id AS member_company_id,
        m.email AS member_email,
        m.department_id AS member_department_id,
        m.position_id AS member_position_id,
        m.phone AS member_phone,
        m2.name as writer_name,
        m2.role_id AS writer_role_id,
        m2.company_id AS writer_company_id,
        m2.email AS writer_email,
        m2.department_id AS writer_department_id,
        m2.position_id AS writer_position_id,
        m2.phone AS writer_phone,
        a.NAME AS writer_avatar_name
        FROM TASK t
        LEFT JOIN TASK_MEMBER tm ON t.ID = tm.TASK_ID
        LEFT JOIN MEMBER m ON tm.MEMBER_ID = m.ID
        LEFT JOIN MEMBER m2 ON t.WRITER_ID = m2.ID
        LEFT JOIN AVATAR a ON a.MEMBER_ID = m2.ID
        WHERE PROJECT_ID = #{id}
    </select>
    <resultMap id="getResult" type="TaskDTO" autoMapping="true">
        <id column="id" property="id"/>
        <association property="writer" javaType="MemberDTO" autoMapping="true" columnPrefix="writer_">
            <result column="id" property="id"/>
            <association property="avatar" javaType="Avatar" columnPrefix="avatar_" autoMapping="true"/>
        </association>
        <collection property="task_member" javaType="List" ofType="MemberDTO" columnPrefix="member_" autoMapping="true">
            <id column="id" property="id"/>
        </collection>
    </resultMap>

    <insert id="createTask" parameterType="TaskDTO">
        <selectKey keyProperty="id" resultType="Long" order="BEFORE">
            SELECT TASK_SEQ.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TASK (ID, NAME, CREATE_DT, PROJECT_ID, CONTENT, WRITER_ID, START_DT, END_DT, HAS_LIMIT, STATUS)
        VALUES (#{id}, #{name}, SYSDATE, #{project_id}, #{content}, #{writer_id},
        #{start_dt,jdbcType=DATE},
        #{end_dt,jdbcType=DATE},
        #{has_limit}, 0)
    </insert>

    <update id="updateTask" parameterType="TaskDTO">
        UPDATE TASK SET NAME = #{name}, CONTENT = #{content} WHERE ID = #{id}
    </update>

    <delete id="deleteTask" parameterType="TaskDTO">
        DELETE FROM TASK WHERE ID = #{id}
    </delete>

    <select id="getTaskDetail" parameterType="TaskDTO" resultType="TaskDTO">
        SELECT * FROM TASK WHERE ID = #{id}
    </select>

    <insert id="addCharge" parameterType="Map">
        INSERT INTO TASK_MEMBER (MEMBER_ID,TASK_ID)
        <foreach collection="charge.split(',')" item="member_id" separator="UNION ALL">
            SELECT #{member_id}, #{task_id} FROM DUAL
        </foreach>
    </insert>

    <update id="changeStatus" parameterType="TaskDTO">
        UPDATE TASK SET STATUS = #{status} WHERE ID = #{id}
    </update>

</mapper>