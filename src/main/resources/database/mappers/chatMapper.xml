<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">


<mapper namespace="com.workmotion.app.chat.ChatDAO">
    <insert id="createRoom" parameterType="RoomInfoDTO">
        INSERT INTO ROOM (name) VALUES (#{room_name})
    </insert>
    <insert id="addMember" parameterType="Map">
        INSERT INTO ROOM_MEMBER (MEMBER_ID,ROOM_NAME,JOIN_DT,RECENTLY_DT, NAME)
        <foreach collection="members.split(',')" item="member_id" separator="UNION ALL">
            SELECT #{member_id}, #{room_name}, CURRENT_TIMESTAMP, CURRENT_DATE, #{name} FROM DUAL
        </foreach>
    </insert>
    <select id="getRoom" parameterType="RoomInfoDTO" resultType="RoomDTO">
        SELECT * FROM ROOM WHERE NAME = #{room_name}
    </select>
    <insert id="sendMessage" parameterType="MessageDTO">
        INSERT INTO MESSAGE (ID, MESSAGE, TIME, SENDER_ID, ROOM_NAME)
        VALUES (MESSAGE_SEQ.NEXTVAL, #{message}, #{time}, #{sender_id}, #{room_name})
    </insert>
    <update id="updateRoomInfo" parameterType="RoomInfoDTO">
        UPDATE ROOM_MEMBER
        <set>
            <if test="join_dt != null">
                JOIN_DT = #{join_dt}
            </if>
            <if test="name != null">
                name = #{name}
            </if>
            RECENTLY_DT = CURRENT_TIMESTAMP
        </set>
        WHERE MEMBER_ID = #{member_id} AND ROOM_NAME = #{room_name}
    </update>
    <select id="getMessage" parameterType="Map" resultType="MessageDTO">
        SELECT * FROM
        (
        SELECT
        m.*
        FROM MESSAGE m
        LEFT JOIN ROOM_MEMBER rm ON m.ROOM_NAME = rm.ROOM_NAME AND rm.ROOM_NAME LIKE #{roomInfo.room_name}
        WHERE rm.MEMBER_ID = #{roomInfo.member_id} AND rm.RECENTLY_DT &lt;= m."TIME"
        UNION ALL
        SELECT a.ID, a.MESSAGE, a.SENDER_ID, a.ROOM_NAME, a.TIME FROM
        (
        SELECT ROWNUM rn, b.* FROM
        (
        SELECT
        m.*
        FROM MESSAGE m
        LEFT JOIN ROOM_MEMBER rm ON m.ROOM_NAME = rm.ROOM_NAME AND rm.ROOM_NAME LIKE #{roomInfo.room_name}
        WHERE rm.MEMBER_ID = #{roomInfo.member_id} AND rm.RECENTLY_DT &gt; m."TIME"
        ORDER BY m.TIME DESC
        ) b
        ) a
        WHERE a.rn BETWEEN #{pager.startNum} AND #{pager.lastNum}
        )
        ORDER BY "TIME" ASC
    </select>
    <select id="getRoomInfo" parameterType="RoomInfoDTO" resultType="RoomInfoDTO">
        SELECT * FROM ROOM_MEMBER WHERE ROOM_NAME = #{room_name} AND MEMBER_ID = #{member_id}
    </select>
    <resultMap id="getUserRooms" type="MessageDTO" autoMapping="true">
        <id column="id" property="id"/>
        <association property="sender" javaType="MemberDTO"
                     resultMap="com.workmotion.app.project.dao.CrewDAO.getMember" autoMapping="true"/>
        <association property="roomInfo" javaType="RoomInfoDTO">
            <result column="name" property="name"/>
        </association>
    </resultMap>
    <select id="getUserRoom" parameterType="MemberDTO" resultMap="getUserRooms">
        <include refid="com.workmotion.app.project.dao.CrewDAO.getMember">
            <property name="alias" value=",ms.*,rm.name"/>
        </include>
        JOIN ROOM_MEMBER rm ON rm.MEMBER_ID = m.ID
        JOIN MESSAGE ms ON rm.ROOM_NAME = ms.ROOM_NAME
        JOIN (SELECT ROOM_NAME, MAX(TIME) lastest_time FROM MESSAGE GROUP BY ROOM_NAME) ms2 ON ms.ROOM_NAME =
        ms2.ROOM_NAME AND ms."TIME" = ms2.lastest_time
        WHERE rm.MEMBER_ID != #{id} AND ms.ROOM_NAME LIKE '%'||#{id}||'%'
        ORDER BY ms."TIME" DESC
    </select>
</mapper>